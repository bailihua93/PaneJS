define("PaneJS/common/utils",["require","exports","module"],function(require,exports,module){var utils={};var arrProto=Array.prototype;var objProto=Object.prototype;var slice=arrProto.slice;var toString=objProto.toString;var hasOwn=objProto.hasOwnProperty;function isType(obj,type){return toString.call(obj)==="[object "+type+"]"}function isObject(obj){var type=typeof obj;return type==="function"||type==="object"&&!!obj}function isFunction(obj){return isType(obj,"Function")}function isNull(obj){return obj===null}function isUndefined(obj){return typeof obj==="undefined"}function isNullOrUndefined(obj){return isUndefined(obj)||isNull(obj)}function isWindow(obj){return obj!==null&&obj===obj.window}var isArray=Array.isArray||function(obj){return isType(obj,"Array")};function isArrayLike(obj){if(isArray(obj)){return true}if(isFunction(obj)||isWindow(obj)){return false}var length=!!obj&&"length"in obj&&obj.length;return length===0||typeof length==="number"&&length>0&&length-1 in obj}function isNumeric(obj){return!isArray(obj)&&obj-parseFloat(obj)+1>=0}utils.isType=isType;utils.isNull=isNull;utils.isArray=isArray;utils.isObject=isObject;utils.isWindow=isWindow;utils.isNumeric=isNumeric;utils.isFunction=isFunction;utils.isUndefined=isUndefined;utils.isArrayLike=isArrayLike;utils.isNullOrUndefined=isNullOrUndefined;utils.toString=function(str){return""+str};utils.lcFirst=function(str){str=str+"";return str.charAt(0).toLowerCase()+str.substr(1)};utils.ucFirst=function(str){str=str+"";return str.charAt(0).toUpperCase()+str.substr(1)};utils.toFixed=function(value,precision){var power=Math.pow(10,precision);return(Math.round(value*power)/power).toFixed(precision)};utils.mod=function(n,m){return(n%m+m)%m};function hasKey(obj,key){return obj!==null&&hasOwn.call(obj,key)}function clone(obj){return JSON.parse(JSON.stringify(obj))}utils.keys=Object.keys||function(obj){if(!isObject(obj)){return[]}var keys=[];for(var key in obj){if(hasKey(obj,key)){keys.push(key)}}};utils.hasKey=hasKey;utils.clone=clone;utils.extend=function(dist){each(slice.call(arguments,1),function(source){if(source){for(var prop in source){dist[prop]=source[prop]}}});return dist};utils.indexOf=arrProto.indexOf?function(arr,item){return arr.indexOf(item)}:function(arr,item){for(var i=0,len=arr.length;i<len;i++){if(arr[i]===item){return i}}return-1};var each=utils.each=function(list,iteratee,context){var i;if(isArrayLike(list)){var length=list.length;for(i=0;i<length;i++){iteratee.call(context,list[i],i,list)}}else{for(i in list){if(hasKey(list,i)){iteratee.call(context,list[i],i,list)}}}return list};utils.toArray=function(obj){return isArrayLike(obj)?slice.call(obj):[]};utils.invoke=function(method,args,context){if(!method||!isFunction(method)){return}args=isArray(args)?args:args?[args]:[];var ret;var a1=args[0];var a2=args[1];var a3=args[2];switch(args.length){case 0:ret=method.call(context);break;case 1:ret=method.call(context,a1);break;case 2:ret=method.call(context,a1,a2);break;case 3:ret=method.call(context,a1,a2,a3);break;default:ret=method.apply(context,args);break}return ret};utils.getFunctionName=function(fn){var str="";if(!isNullOrUndefined(fn)){if(!isNullOrUndefined(fn.name)){str=fn.name}else{var tmp=fn.toString();var idx1=9;while(tmp.charAt(idx1)===" "){idx1++}var idx2=tmp.indexOf("(",idx1);str=tmp.substring(idx1,idx2)}}return str};utils.getBaseUrl=function(){var href=window.location.href;var hash=href.lastIndexOf("#");if(hash>0){href=href.substring(0,hash)}return href};utils.toRadians=function(deg){return Math.PI*deg/180};module.exports=utils});define("PaneJS/common/class",["require","exports","module","./utils"],function(require,exports,module){var utils=require("./utils");var each=utils.each;var hasKey=utils.hasKey;var isArray=utils.isArray;var isFunction=utils.isFunction;function Class(o){if(!(this instanceof Class)&&isFunction(o)){return classify(o)}}Class.create=function(parent,properties){if(!isFunction(parent)){properties=parent;parent=null}properties||(properties={});parent||(parent=properties.Extends||Class);properties.Extends=parent;var SubClass=properties.constructor;if(SubClass===Object.prototype.constructor){SubClass=function Class(){}}if(parent!==Class){mix(SubClass,parent,parent.StaticsWhiteList)}implement.call(SubClass,properties);return classify(SubClass)};Class.extend=function(properties){properties||(properties={});properties.Extends=this;return Class.create(properties)};Class.Mutators={Extends:function(parent){var existed=this.prototype;var parentProto=parent.prototype;var proto=createProto(parentProto);mix(proto,existed);proto.constructor=this;this.prototype=proto;this.superclass=parentProto},Implements:function(items){if(!isArray(items)){items=[items]}var proto=this.prototype;var item;while(item=items.shift()){mix(proto,item.prototype||item)}},Statics:function(staticProperties){mix(this,staticProperties)}};function classify(cls){cls.extend=Class.extend;cls.implement=implement;return cls}function implement(properties){var that=this;var mutators=Class.Mutators;each(properties,function(value,key){if(hasKey(mutators,key)){mutators[key].call(that,value)}else{that.prototype[key]=value}})}var createProto=Object.__proto__?function(proto){return{__proto__:proto}}:function(proto){function Ctor(){}Ctor.prototype=proto;return new Ctor};function mix(receiver,supplier,whiteList){each(supplier,function(value,key){if(whiteList&&indexOf(whiteList,key)===-1){return}receiver[key]=value})}module.exports=Class});define("PaneJS/common/objectIdentity",["require","exports","module","./utils"],function(require,exports,module){var utils=require("./utils");var isObject=utils.isObject;var isNullOrUndefined=utils.isNullOrUndefined;var getFunctionName=utils.getFunctionName;var FIELD_NAME="objectId";var counter=0;exports.get=function(obj){var isObj=isObject(obj);if(isObj&&isNullOrUndefined(obj[FIELD_NAME])){var ctorName=getFunctionName(obj.constructor);obj[FIELD_NAME]=ctorName+"#"+counter++}return isObj?obj[FIELD_NAME]:""+obj};exports.clear=function(obj){if(isObject(obj)){delete obj[FIELD_NAME]}}});define("PaneJS/events/aspect",["require","exports","module","../common/utils"],function(require,exports,module){var utils=require("../common/utils");var isFunction=utils.isFunction;var each=utils.each;var invoke=utils.invoke;var toArray=utils.toArray;var eventSplitter=/\s+/;function weave(when,methodName,callback,context){var that=this;var names=methodName.split(eventSplitter);each(names,function(name){var method=that[name];if(!method||!isFunction(method)){throw new Error("Event handler must be function, event name: "+name)}if(!method.__isAspected){wrap.call(that,name)}that.on(when+":"+name,callback,context)});return that}function wrap(methodName){var that=this;var originMethod=that[methodName];that[methodName]=function(){var that=this;var args=toArray(arguments);var beforeArgs=["before:"+methodName].concat(args);if(invoke(that.trigger,beforeArgs,that)===false){return}var ret=originMethod.apply(this,arguments);var afterArgs=["after:"+methodName,ret].concat(args);invoke(that.trigger,afterArgs,that);return ret};that[methodName].__isAspected=true}exports.before=function(methodName,callback,context){return weave.call(this,"before",methodName,callback,context)};exports.after=function(methodName,callback,context){return weave.call(this,"after",methodName,callback,context)};exports.around=function(methodName,callback,context){weave.call(this,"before",methodName,callback,context);weave.call(this,"after",methodName,callback,context);return this}});define("PaneJS/CellRenderer",["require","exports","module","PaneJS/common/class"],function(require,exports,module){"use strict";var Class=require("PaneJS/common/class");module.exports=Class.create({Statics:{shapes:{},registerShape:function(key,shape){CellRenderer.shapes[key]=shape}},defaultEdgeShape:null,defaultVertexShape:null,defaultTextShape:null,legacyControlPosition:true,legacySpacing:true,antiAlias:true,constructor:function CellRenderer(){},createShape:function(state){},getShape:function(name){return this.constructor.shapes[name]},getShapeConstructor:function(state){}})});define("PaneJS/Point",["require","exports","module","PaneJS/common/class"],function(require,exports,module){var Klass=require("PaneJS/common/class");var Point=Klass.create({constructor:function Point(x,y){this.x=x?x:0;this.y=y?y:0},equals:function(point){return point instanceof Point&&point.x===this.x&&point.y===this.y},clone:function(){return new Point(this.x,this.y)}});module.exports=Point});define("PaneJS/UndoableEdit",["require","exports","module","PaneJS/common/class","PaneJS/common/utils"],function(require,exports,module){var Class=require("PaneJS/common/class");var utils=require("PaneJS/common/utils");var isNullOrUndefined=utils.isNullOrUndefined;module.exports=Class.create({constructor:function UndoableEdit(source,significant){var that=this;that.source=source;that.changes=[];that.significant=!isNullOrUndefined(significant)?significant:true;that.undone=false;that.redone=false},isEmpty:function(){return this.changes.length===0},isSignificant:function(){return this.significant},add:function(change){this.changes.push(change)},notify:function(){},die:function(){},undo:function(){},redo:function(){}})});define("PaneJS/changes/Change",["require","exports","module","../common/class"],function(require,exports,module){"use strict";var Class=require("../common/class");module.exports=Class.create({constructor:function Change(model){this.model=model},digest:function(){}})});define("PaneJS/common/Dictionary",["require","exports","module","./class","./utils","./objectIdentity"],function(require,exports,module){"use strict";var Class=require("./class");var utils=require("./utils");var objectIdentity=require("./objectIdentity");var isObject=utils.isObject;var keys=utils.keys;var each=utils.each;function getId(key){if(isObject(key)){return objectIdentity.get(key)}return""+key}module.exports=Class.create({constructor:function Dictionary(){return this.clear()},clear:function(){var dic=this;dic.map={};return dic},get:function(key){var id=getId(key);return this.map[id]},set:function(key,value){var map=this.map;var id=getId(key);var previous=map[id];map[id]=value;return previous},remove:function(key){var map=this.map;var id=getId(key);var previous=map[id];delete map[id];return previous},getKeys:function(){return keys(this.map)},getValues:function(){var result=[];each(this.map,function(value){result.push(value)});return result},visit:function(visitor){var dic=this;each(dic.map,visitor);return dic}})});define("PaneJS/events/EventObject",["require","exports","module","../common/class","../common/utils"],function(require,exports,module){var Class=require("../common/class");var utils=require("../common/utils");var isObject=utils.isObject;var extend=utils.extend;var isNullOrUndefined=utils.isNullOrUndefined;module.exports=Class.create({constructor:function EventObject(name,eventData){var evtObj=this;var data=evtObj.data={};evtObj.name=name;evtObj.consumed=false;isObject(eventData)&&extend(data,eventData)},getName:function(){return this.name},addData:function(key,value){var evtObj=this;var data=evtObj.data;if(isObject(key)){extend(data,key)}else{data[key]=value}return evtObj},getData:function(key){var data=this.data;return isNullOrUndefined(key)?data:data[key]},isConsumed:function(){return this.consumed},consume:function(){this.consumed=true}})});define("PaneJS/Rectangle",["require","exports","module","PaneJS/common/class","PaneJS/Point"],function(require,exports,module){var Klass=require("PaneJS/common/class");var Point=require("PaneJS/Point");var Rectangle=Klass.create({Extends:Point,constructor:function Rectangle(x,y,width,height){var rect=this;Rectangle.superclass.constructor.call(rect,x,y);rect.width=width?width:0;rect.height=height?height:0},setRect:function(x,y,width,height){var rect=this;rect.x=x;rect.y=y;rect.width=width;rect.height=height;return rect},getCenterX:function(){return this.x+this.width/2},getCenterY:function(){return this.y+this.height/2},getCenter:function(){return new Point(this.getCenterX(),this.getCenterY())},add:function(rect){if(!rect){return}var that=this;var minX=Math.min(that.x,rect.x);var minY=Math.min(that.y,rect.y);var maxX=Math.max(that.x+that.width,rect.x+rect.width);var maxY=Math.max(that.y+that.height,rect.y+rect.height);that.x=minX;that.y=minY;that.width=maxX-minX;that.height=maxY-minY;return that},grow:function(amount){var rect=this;rect.x-=amount;rect.y-=amount;rect.width+=2*amount;rect.height+=2*amount;return rect},rotate90:function(){var rect=this;var w=rect.width;var h=rect.height;var t=(w-h)/2;rect.x+=t;rect.y-=t;rect.width=h;rect.height=w;return rect},equals:function(rect){var that=this;return Rectangle.superclass.equals.call(that,rect)&&rect instanceof Rectangle&&rect.width===that.width&&rect.height===that.height},fromRect:function(rect){return new Rectangle(rect.x,rect.y,rect.width,rect.height)},clone:function(){var rect=this;return rect.fromRect(rect)}});module.exports=Rectangle});define("PaneJS/changes/ChildChange",["require","exports","module","./Change","../common/utils"],function(require,exports,module){var Change=require("./Change");var utils=require("../common/utils");var isNullOrUndefined=utils.isNullOrUndefined;module.exports=Change.extend({constructor:function ChildChange(model,parent,child,index){var change=this;ChildChange.superclass.constructor.call(change,model);change.parent=parent;change.child=child;change.index=index;change.previous=parent;change.previousIndex=index},digest:function(){var change=this;var model=change.model;var child=change.child;var previous=change.previous;var previousIndex=change.previousIndex;var oldParent=model.getParent(child);var oldIndex=oldParent?oldParent.getIndex(child):0;if(previous){change.connect(child,false)}oldParent=model.parentForCellChanged(child,previous,previousIndex);if(previous){change.connect(child,true)}change.parent=previous;change.index=previousIndex;change.previous=oldParent;change.previousIndex=oldIndex;return change},connect:function(cell,isConnect){var change=this;var model=change.model;isConnect=isNullOrUndefined(isConnect)?true:isConnect;var source=cell.getTerminal(true);var target=cell.getTerminal(false);if(source){if(isConnect){model.terminalForCellChanged(cell,source,true)}else{model.terminalForCellChanged(cell,null,true)}}if(target){if(isConnect){model.terminalForCellChanged(cell,target,false)}else{model.terminalForCellChanged(cell,null,false)}}cell.setTerminal(source,true);cell.setTerminal(target,false);var childCount=model.getChildCount(cell);for(var i=0;i<childCount;i++){change.connect(model.getChildAt(cell,i),isConnect)}return change}})});define("PaneJS/changes/CurrentRootChange",["require","exports","module","./Change"],function(require,exports,module){"use strict";var Change=require("./Change");module.exports=Change.extend({constructor:function CurrentRootChange(model,root){var change=this;RootChange.superclass.constructor.call(change,model);change.root=root;change.previous=root},digest:function(){var change=this;var model=change.model;var previous=change.previous;change.root=previous;change.previous=model.rootChanged(previous);return change}})});define("PaneJS/changes/RootChange",["require","exports","module","./Change"],function(require,exports,module){"use strict";var Change=require("./Change");module.exports=Change.extend({constructor:function RootChange(model,root){var change=this;RootChange.superclass.constructor.call(change,model);change.root=root;change.previous=root},digest:function(){var change=this;var model=change.model;var previous=change.previous;change.root=previous;change.previous=model.rootChanged(previous);return change}})});define("PaneJS/events/Event",["require","exports","module","../common/utils","../common/class","./EventObject"],function(require,exports,module){var utils=require("../common/utils");var Class=require("../common/class");var EventObject=require("./EventObject");var keys=utils.keys;var each=utils.each;var eventSplitter=/\s+/;module.exports=Class.create({eventListeners:null,eventEnabled:true,eventSource:null,constructor:function Events(){},isEventEnabled:function(){return this.eventEnabled},setIsEventEnabled:function(enabled){var that=this;that.eventEnabled=enabled;return that},enableEvent:function(){return this.setIsEventEnabled(true)},disableEvent:function(){return this.setIsEventEnabled(false)},getEventSource:function(){return this.eventSource},setEventSource:function(value){var that=this;that.eventSource=value;return that},on:function(events,callback,context){var that=this;if(!callback){return that}var listeners=that.eventListeners||(that.eventListeners={});events=events.split(eventSplitter);each(events,function(event){var list=listeners[event]||(listeners[event]=[]);list.push(callback,context)});return that},once:function(events,callback,context){var that=this;var cb=function(){that.off(events,cb);callback.apply(context||that,arguments)};return that.on(events,cb,context)},off:function(events,callback,context){var that=this;var listeners=that.eventListeners;if(!listeners){return that}if(!(events||callback||context)){delete that.eventListeners;return that}events=events?events.split(eventSplitter):keys(listeners);each(events,function(event){var list=listeners[event];if(!list){return}if(!(callback||context)){delete listeners[event];return}for(var i=list.length-2;i>=0;i-=2){if(!(callback&&list[i]!==callback||context&&list[i+1]!==context)){list.splice(i,2)}}});return that},emit:function(eventObj,sender){var that=this;var returned=[];var listeners=that.eventListeners;if(!listeners||!that.isEventEnabled()){return returned}eventObj=eventObj||new EventObject;var eventName=eventObj.getName();if(!eventName){return returned}sender=sender||that.getEventSource();sender=sender||that;var list=listeners[eventName];var length=list?list.length:0;var ret;for(var i=0;i<length;i+=2){ret=list[i].call(list[i+1]||that,eventObj,sender);if(length>2){returned.push(ret)}else{returned=ret}}return returned}})});define("PaneJS/CellState",["require","exports","module","PaneJS/Point","PaneJS/Rectangle"],function(require,exports,module){var Point=require("PaneJS/Point");var Rectangle=require("PaneJS/Rectangle");module.exports=Rectangle.extend({constructor:function CellState(view,cell,style){var that=this;that.view=view;that.cell=cell;that.style=style;that.origin=new Point;that.absoluteOffset=new Point},view:null,cell:null,style:null,invalid:true,origin:null,absolutePoints:null,absoluteOffset:null,visibleSourceState:null,visibleTargetState:null,terminalDistance:0,length:0,segments:null,shape:null,text:null,getPerimeterBounds:function(){},setAbsoluteTerminalPoint:function(){},setCursor:function(cursor){if(this.shape!==null){this.shape.setCursor(cursor)}if(this.text!==null){this.text.setCursor(cursor)}},getVisibleTerminal:function(){},getVisibleTerminalState:function(){},setVisibleTerminalState:function(){},getCellBounds:function(){},getPaintBounds:function(){},updateCachedBounds:function(){},clone:function(){},destroy:function(){}})});define("PaneJS/Geometry",["require","exports","module","PaneJS/Rectangle"],function(require,exports,module){var Rectangle=require("PaneJS/Rectangle");module.exports=Rectangle.extend({constructor:function Geometry(x,y,width,height){Geometry.superclass.constructor.call(this,x,y,width,height)},TRANSLATE_CONTROL_POINTS:true,alternateBounds:null,sourcePoint:null,targetPoint:null,points:null,offset:null,relative:false,swap:function(){var geom=this;var alternateBounds=geom.alternateBounds;if(alternateBounds){var old=new Rectangle(geom.x,geom.y,geom.width,geom.height);geom.x=alternateBounds.x;geom.y=alternateBounds.y;geom.width=alternateBounds.width;geom.height=alternateBounds.height;geom.alternateBounds=old}return geom},getTerminalPoint:function(isSource){var geom=this;return isSource?geom.sourcePoint:geom.targetPoint},setTerminalPoint:function(point,isSource){var geom=this;if(isSource){geom.sourcePoint=point}else{geom.targetPoint=point}return point},rotate:function(){},translate:function(){},scale:function(){},equals:function(){}})});define("PaneJS/constants",["require","exports","module","PaneJS/Rectangle"],function(require,exports,module){var Rectangle=require("PaneJS/Rectangle");module.exports={NONE:"none",NS_SVG:"http://www.w3.org/2000/svg",EVENT_SPLITTER:/\s+/,OBJECT_ID:"objectId",SHADOW_COLOR:"gray",SHADOW_OFFSET_X:2,SHADOW_OFFSET_Y:3,SHADOW_OPACITY:1,DEFAULT_FONT_SIZE:11,DEFAULT_FONT_FAMILY:"Arial,Helvetica",NODETYPE_ELEMENT:1,PAGE_FORMAT_A4_PORTRAIT:new Rectangle(0,0,826,1169),PAGE_FORMAT_A4_LANDSCAPE:new Rectangle(0,0,1169,826),PAGE_FORMAT_LETTER_PORTRAIT:new Rectangle(0,0,850,1100),PAGE_FORMAT_LETTER_LANDSCAPE:new Rectangle(0,0,1100,850),STYLE_FILLCOLOR:"fillColor"}});define("PaneJS/Canvas2D",["require","exports","module","PaneJS/common/class","PaneJS/common/utils","PaneJS/constants"],function(require,exports,module){var Class=require("PaneJS/common/class");var utils=require("PaneJS/common/utils");var constants=require("PaneJS/constants");var each=utils.each;var ucFirst=utils.ucFirst;var isNullOrUndefined=utils.isNullOrUndefined;var proto={constructor:function Canvas(root,styleEnabled){var canvas=this;canvas.root=root;canvas.defs=null;canvas.gradients=[];canvas.styleEnabled=!isNullOrUndefined(styleEnabled)?styleEnabled:false;this.reset()},node:null,state:null,states:null,path:null,rotateHtml:true,lastX:0,lastY:0,antiAlias:true,matchHtmlAlignment:true,textEnabled:true,foEnabled:true,foAltText:"[Object]",strokeTolerance:0,refCount:0,blockImagePointerEvents:false,lineHeightCorrection:1.05,pointerEventsValue:"all",fontMetricsPadding:10,pointerEvents:false,reset:function(){var canvas=this;canvas.state=canvas.createState();canvas.states=[];canvas.gradients=[];return canvas},createState:function(){return{dx:0,dy:0,scale:1,alpha:1,fillColor:null,fillAlpha:1,gradientColor:null,gradientAlpha:1,gradientDirection:null,strokeColor:null,strokeWidth:1,dashed:false,dashPattern:"3 3",lineCap:"flat",lineJoin:"miter",miterLimit:10,fontColor:"#000000",fontBackgroundColor:null,fontBorderColor:null,fontSize:constants.DEFAULT_FONT_SIZE,fontFamily:constants.DEFAULT_FONT_FAMILY,fontStyle:0,shadow:false,shadowColor:constants.SHADOW_COLOR,shadowAlpha:constants.SHADOW_OPACITY,shadowDx:constants.SHADOW_OFFSET_X,shadowDy:constants.SHADOW_OFFSET_Y,rotation:0,rotationCx:0,rotationCy:0}},save:function(){var canvas=this;var state=canvas.state;var states=canvas.states;if(states&&state){states.push(state)}canvas.state=utils.clone(state);return canvas},restore:function(){var canvas=this;var states=canvas.states;if(states&&states.length){canvas.state=states.pop()}return canvas},format:function(value){return this.antiAlias?utils.toFixed(value,2):Math.round(parseFloat(value))},rotatePoint:function(){},scale:function(value){var canvas=this;var state=canvas.state;if(state){state.scale*=value;state.strokeWidth*=value}return canvas},translate:function(dx,dy){var canvas=this;var state=canvas.state;if(state){state.dx+=dx;state.dy+=dy}return canvas},rotate:function(){},begin:function(){var canvas=this;canvas.lastX=0;canvas.lastY=0;canvas.path=[];canvas.node=canvas.createElement("path");return canvas},addOp:function(){var canvas=this;var path=canvas.path;var state=canvas.state;var length=arguments.length;if(path){path.push(arguments[0]);if(length>2){for(var i=2;i<length;i+=2){canvas.lastX=arguments[i-1];canvas.lastY=arguments[i];path.push(canvas.format((canvas.lastX+state.dx)*state.scale));path.push(canvas.format((canvas.lastY+state.dy)*state.scale))}}}return canvas},moveTo:function(x,y){return this.addOp("M",x,y)},lineTo:function(x,y){return this.addOp("L",x,y)},quadTo:function(x1,y1,x2,y2){return this.addOp("Q",x1,y1,x2,y2)},curveTo:function(x1,y1,x2,y2,x3,y3){return this.addOp("C",x1,y1,x2,y2,x3,y3)},arcTo:function(){},close:function(){return this.addOp("Z")},rect:function(x,y,w,h,dx,dy){var canvas=this;var format=canvas.format;var state=canvas.state;var scale=state.scale;var rect=canvas.createElement("rect");rect.setAttribute("x",format((x+state.dx)*scale));rect.setAttribute("y",format((y+state.dy)*scale));rect.setAttribute("width",format(w*scale));rect.setAttribute("height",format(h*scale));if(dx>0){rect.setAttribute("rx",format(dx*scale))}if(dy>0){rect.setAttribute("ry",format(dy*scale))}canvas.node=rect;return canvas},ellipse:function(x,y,w,h){var canvas=this;var state=canvas.state;var scale=state.scale;var ellipse=canvas.createElement("ellipse");ellipse.setAttribute("cx",Math.round((x+w/2+state.dx)*scale));ellipse.setAttribute("cy",Math.round((y+h/2+state.dy)*scale));ellipse.setAttribute("rx",w/2*scale);ellipse.setAttribute("ry",h/2*scale);canvas.node=ellipse;return canvas},image:function(){},createDiv:function(){},text:function(){},createClip:function(){},plainText:function(){},updateFont:function(){},addTextBackground:function(){},stroke:function(){this.addNode(false,false)},fill:function(){this.addNode(true,false)},fillAndStroke:function(){this.addNode(true,true)},createStyle:function(){},createElement:function(tagName,namespace){var ownerDocument=this.root.ownerDocument;if(ownerDocument.createElementNS){return ownerDocument.createElementNS(namespace||constants.NS_SVG,tagName)}else{var ele=ownerDocument.createElement(tagName);if(namespace){ele.setAttribute("xmlns",namespace)}return ele}},createAlternateContent:function(){},createGradientId:function(){},getSvgGradient:function(){},createSvgGradient:function(){},addNode:function(filled,stroked){var canvas=this;var root=canvas.root;var node=canvas.node;var state=canvas.state;if(!node){return canvas}if(node.nodeName==="path"){var path=canvas.path;if(path&&path.length){node.setAttribute("d",path.join(" "))}else{return canvas}}if(filled&&state.fillColor){canvas.updateFill()}else if(!canvas.styleEnabled){node.setAttribute("fill","none");filled=false}if(stroked&&state.strokeColor){state.updateStroke()}else if(!canvas.styleEnabled){node.setAttribute("stroke","none")}if(state.transform&&state.transform.length>0){node.setAttribute("transform",state.transform)}if(state.shadow){root.appendChild(canvas.createShadow(node))}if(canvas.strokeTolerance>0&&!filled){root.appendChild(canvas.createTolerance(node))}if(canvas.pointerEvents&&(node.nodeName!="path"||this.path[this.path.length-1]==this.closeOp)){node.setAttribute("pointer-events",this.pointerEventsValue)}else if(!canvas.pointerEvents&&canvas.originalRoot===null){node.setAttribute("pointer-events","none")}root.appendChild(node);return canvas},updateFill:function(){var s=this.state;if(s.alpha<1){this.node.setAttribute("fill-opacity",s.alpha)}if(s.fillColor!==null){if(s.gradientColor!==null){var id=this.getSvgGradient(s.fillColor,s.gradientColor,s.fillAlpha,s.gradientAlpha,s.gradientDirection);if(!mxClient.IS_IE&&this.root.ownerDocument==document){var base=this.getBaseUrl().replace(/([\(\)])/g,"\\$1");this.node.setAttribute("fill","url("+base+"#"+id+")")}else{this.node.setAttribute("fill","url(#"+id+")")}}else{this.node.setAttribute("fill",s.fillColor.toLowerCase())}}},getCurrentStrokeWidth:function(){return Math.max(1,this.format(this.state.strokeWidth*this.state.scale))},updateStroke:function(){var s=this.state;this.node.setAttribute("stroke",s.strokeColor.toLowerCase());if(s.alpha<1){this.node.setAttribute("stroke-opacity",s.alpha)}var sw=this.getCurrentStrokeWidth();if(sw!=1){this.node.setAttribute("stroke-width",sw)}if(this.node.nodeName=="path"){this.updateStrokeAttributes()}if(s.dashed){this.node.setAttribute("stroke-dasharray",this.createDashPattern(s.strokeWidth*s.scale))}},updateStrokeAttributes:function(){},createDashPattern:function(){},createTolerance:function(){},createShadow:function(){},setLink:function(){},setFillColor:function(value){var canvas=this;var state=canvas.state;if(value==constants.NONE){value=null}if(state){state.fillColor=value;state.gradientColor=null}return canvas},setGradient:function(){},setFontStyle:function(value){var canvas=this;var state=canvas.state;if(isNullOrUndefined(value)){value=0}if(state){state.fontStyle=value}return canvas},setShadowOffset:function(dx,dy){var canvas=this;var state=canvas.state;if(state){state.shadowDx=dx;state.shadowDy=dy}return canvas}};each(["alpha","strokeWidth","dashed","dashPattern","lineCap","lineJoin","miterLimit","fontSize","fontFamily","shadow","shadowAlpha"],function(attr){proto["set"+ucFirst(attr)]=function(value){var canvas=this;var state=canvas.state;if(state){state[attr]=value}return canvas}});each(["strokeColor","fontColor","fontBackgroundColor","fontBorderColor","setShadowColor"],function(attr){proto["set"+ucFirst(attr)]=function(value){var canvas=this;var state=canvas.state;if(value===constants.NONE){value=null}if(state){state[attr]=value}return canvas}});module.exports=Class.create(proto)});define("PaneJS/Cell",["require","exports","module","PaneJS/common/class","PaneJS/common/utils","PaneJS/constants"],function(require,exports,module){var Class=require("PaneJS/common/class");var utils=require("PaneJS/common/utils");var constants=require("PaneJS/constants");var isNullOrUndefined=utils.isNullOrUndefined;module.exports=Class.create({constructor:function Cell(value,geometry,style){var cell=this;cell.value=value;cell.setGeometry(geometry);cell.setStyle(style);cell.onInit&&cell.onInit()},id:null,value:null,geometry:null,style:null,vertex:false,edge:false,connectable:true,visible:true,collapsed:false,source:null,target:null,parent:null,children:null,edges:null,getId:function(){return this.id},setId:function(id){this.id=id},getValue:function(){return this.value},setValue:function(value){this.value=value},getGeometry:function(){return this.geometry},setGeometry:function(geometry){this.geometry=geometry},getStyle:function(){return this.style},setStyle:function(style){this.style=style},isVertex:function(){return this.vertex},setVertex:function(vertex){this.vertex=vertex},isEdge:function(){return this.edge},setEdge:function(edge){this.edge=edge},isConnectable:function(){return this.connectable},setConnectable:function(connectable){this.connectable=connectable},isVisible:function(){return this.visible},setVisible:function(visible){this.visible=visible},isCollapsed:function(){return this.collapsed},setCollapsed:function(collapsed){this.collapsed=collapsed},getParent:function(){return this.parent},setParent:function(parent){this.parent=parent},getTerminal:function(source){return source?this.source:this.target},setTerminal:function(terminal,isSource){if(isSource){this.source=terminal}else{this.target=terminal}return terminal},getChildCount:function(){return this.children?this.children.length:0},getIndex:function(child){return utils.indexOf(this.children,child)},getChildAt:function(index){return this.children?this.children[index]:null},insert:function(child,index){if(child){if(isNullOrUndefined(index)){index=this.getChildCount();if(child.getParent()===this){index--}}child.removeFromParent();child.setParent(this);if(!this.children){this.children=[];this.children.push(child)}else{this.children.splice(index,0,child)}}return child},remove:function(index){var child=null;if(this.children!==null&&index>=0){child=this.getChildAt(index);if(child!==null){this.children.splice(index,1);child.setParent(null)}}return child},removeFromParent:function(){if(this.parent!==null){var index=this.parent.getIndex(this);this.parent.remove(index)}},getEdgeCount:function(){return this.edges===null?0:this.edges.length},getEdgeIndex:function(edge){return utils.indexOf(this.edges,edge)},getEdgeAt:function(index){return this.edges===null?null:this.edges[index]},insertEdge:function(edge,isOutgoing){if(edge!==null){edge.removeFromTerminal(isOutgoing);edge.setTerminal(this,isOutgoing);if(this.edges===null||edge.getTerminal(!isOutgoing)!==this||utils.indexOf(this.edges,edge)<0){if(this.edges===null){this.edges=[]}this.edges.push(edge)}}return edge},removeEdge:function(edge,isOutgoing){if(edge!==null){if(edge.getTerminal(!isOutgoing)!==this&&this.edges!==null){var index=this.getEdgeIndex(edge);if(index>=0){this.edges.splice(index,1);

}}edge.setTerminal(null,isOutgoing)}return edge},removeFromTerminal:function(isSource){var terminal=this.getTerminal(isSource);if(terminal!==null){terminal.removeEdge(this,isSource)}},getAttribute:function(name,defaultValue){var userObject=this.getValue();var val=userObject!==null&&userObject.nodeType===constants.NODETYPE_ELEMENT?userObject.getAttribute(name):null;return val||defaultValue},setAttribute:function(name,value){var userObject=this.getValue();if(userObject!==null&&userObject.nodeType===constants.NODETYPE_ELEMENT){userObject.setAttribute(name,value)}},clone:function(){var clone=utils.clone(this,this.mxTransient);clone.setValue(this.cloneValue());return clone},cloneValue:function(){var value=this.getValue();if(value!==null){if(typeof value.clone==="function"){value=value.clone()}else if(!isNaN(value.nodeType)){value=value.cloneNode(true)}}return value},valueChanged:function(newValue){var previous=this.getValue();this.setValue(newValue);return previous}})});define("PaneJS/View",["require","exports","module","PaneJS/common/class","PaneJS/common/utils","PaneJS/events/Event","PaneJS/common/Dictionary","PaneJS/constants","PaneJS/Point","PaneJS/Rectangle"],function(require,exports,module){"use strict";var Class=require("PaneJS/common/class");var utils=require("PaneJS/common/utils");var Event=require("PaneJS/events/Event");var Dictionary=require("PaneJS/common/Dictionary");var constants=require("PaneJS/constants");var Point=require("PaneJS/Point");var Rectangle=require("PaneJS/Rectangle");var each=utils.each;var isNullOrUndefined=utils.isNullOrUndefined;module.exports=Class.create({Implements:Event,EMPTY_POINT:new Point,doneResource:"",updatingDocumentResource:"",allowEval:true,captureDocumentGesture:true,optimizeVmlReflows:true,rendering:true,graph:null,currentRoot:null,graphBounds:null,scale:1,translate:null,updateStyle:null,lastNode:null,lastHtmlNode:null,lastForegroundNode:null,lastForegroundHtmlNode:null,constructor:function View(graph){var view=this;view.graph=graph;view.translate=new Point;view.graphBounds=new Rectangle;view.states=new Dictionary},init:function(){return this.installListeners().createSvg()},getGraphBounds:function(){return this.graphBounds},setGraphBounds:function(value){this.graphBounds=value},getBounds:function(cells){var view=this;var result=null;if(cells&&cells.length){var model=view.graph.getModel();each(cells,function(cell){if(model.isVertex(cell)||model.isEdge(cell)){var state=view.getState(cell);if(state){var rect=new Rectangle(state.x,state.y,state.width,state.height);if(result){result.add(rect)}else{result=rect}}}})}return result},setCurrentRoot:function(root){if(this.currentRoot!==root){var change=new CurrentRootChange(this,root);change.execute();var edit=new mxUndoableEdit(this,false);edit.add(change);this.fireEvent(new EventObject(mxEvent.UNDO,"edit",edit));this.graph.sizeDidChange()}return root},scaleAndTranslate:function(scale,dx,dy){var view=this;var ts=view.translate;var previousScale=view.scale;var previousTranslate=new Point(ts.x,ts.y);if(previousScale!==scale||ts.x!==dx||ts.y!==dy){view.scale=scale;view.translate.x=dx;view.translate.y=dy;if(view.isEventsEnabled()){view.revalidate();view.graph.sizeDidChange()}}view.fireEvent(new EventObject(mxEvent.SCALE_AND_TRANSLATE,"scale",scale,"previousScale",previousScale,"translate",view.translate,"previousTranslate",previousTranslate))},getScale:function(){return this.scale},setScale:function(value){var view=this;var previousScale=view.scale;if(previousScale!==value){view.scale=value;if(view.isEventsEnabled()){view.revalidate();view.graph.sizeDidChange()}}view.fireEvent(new EventObject(mxEvent.SCALE,"scale",value,"previousScale",previousScale))},getTranslate:function(){return this.translate},setTranslate:function(dx,dy){var view=this;var translate=view.translate;var previousTranslate=new Point(translate.x,translate.y);if(translate.x!==dx||translate.y!==dy){translate.x=dx;translate.y=dy;if(view.isEventsEnabled()){view.revalidate();view.graph.sizeDidChange()}}view.fireEvent(new EventObject(mxEvent.TRANSLATE,"translate",translate,"previousTranslate",previousTranslate))},refresh:function(){if(this.currentRoot!=null){this.clear()}this.revalidate()},revalidate:function(){this.invalidate();this.validate()},clear:function(cell,force,recurse){var view=this;var model=view.graph.getModel();cell=cell||model.getRoot();force=!isNullOrUndefined(force)?force:false;recurse=!isNullOrUndefined(recurse)?recurse:true;view.removeState(cell);if(recurse&&(force||cell!==this.currentRoot)){var childCount=model.getChildCount(cell);for(var i=0;i<childCount;i++){view.clear(model.getChildAt(cell,i),force)}}else{view.invalidate(cell)}},invalidate:function(cell,recurse,includeEdges){var view=this;var model=view.graph.getModel();cell=cell||model.getRoot();recurse=!isNullOrUndefined(recurse)?recurse:true;includeEdges=!isNullOrUndefined(includeEdges)?includeEdges:true;var state=view.getState(cell);if(state){state.invalid=true}if(!cell.invalidating){cell.invalidating=true;if(recurse){var childCount=model.getChildCount(cell);for(var i=0;i<childCount;i++){var child=model.getChildAt(cell,i);view.invalidate(child,recurse,includeEdges)}}if(includeEdges){var edgeCount=model.getEdgeCount(cell);for(var i=0;i<edgeCount;i++){view.invalidate(model.getEdgeAt(cell,i),recurse,includeEdges)}}delete cell.invalidating}},validate:function(cell){this.resetValidationState();var graphBounds=this.getBoundingBox(this.validateCellState(this.validateCell(cell||(this.currentRoot!=null?this.currentRoot:this.graph.getModel().getRoot()))));this.setGraphBounds(graphBounds!=null?graphBounds:this.getEmptyBounds());this.validateBackground();this.resetValidationState()},getEmptyBounds:function(){var view=this;var translate=view.translate;var scale=view.scale;return new Rectangle(translate.x*scale,translate.y*scale)},getBoundingBox:function(state,recurse){recurse=!isNullOrUndefined(recurse)?recurse:true;var bbox=null;if(isNullOrUndefined(state)){return bbox}if(state.shape&&state.shape.boundingBox){bbox=state.shape.boundingBox.clone()}if(state.text&&state.text.boundingBox){if(bbox){bbox.add(state.text.boundingBox)}else{bbox=state.text.boundingBox.clone()}}if(recurse){var model=this.graph.getModel();var childCount=model.getChildCount(state.cell);for(var i=0;i<childCount;i++){var bounds=this.getBoundingBox(this.getState(model.getChildAt(state.cell,i)));if(bounds!=null){if(bbox==null){bbox=bounds}else{bbox.add(bounds)}}}}return bbox},createBackgroundPageShape:function(bounds){},validateBackground:function(){this.validateBackgroundImage();this.validateBackgroundPage()},validateBackgroundImage:function(){},validateBackgroundPage:function(){},getBackgroundPageBounds:function(){var view=this;var scale=view.scale;var translate=view.translate;var fmt=view.graph.pageFormat;var ps=scale*view.graph.pageScale;return new Rectangle(scale*translate.x,scale*translate.y,fmt.width*ps,fmt.height*ps)},redrawBackgroundImage:function(backgroundImage,bg){backgroundImage.scale=this.scale;backgroundImage.bounds.x=this.scale*this.translate.x;backgroundImage.bounds.y=this.scale*this.translate.y;backgroundImage.bounds.width=this.scale*bg.width;backgroundImage.bounds.height=this.scale*bg.height;backgroundImage.redraw()},validateCell:function(cell,visible){var view=this;if(!cell){return cell}visible=!isNullOrUndefined(visible)?visible:true;visible=visible&&view.graph.isCellVisible(cell);var state=view.getState(cell,visible);if(state&&!visible){view.removeState(cell)}else{var model=view.graph.getModel();var childCount=model.getChildCount(cell);for(var i=0;i<childCount;i++){this.validateCell(model.getChildAt(cell,i),visible&&(!this.isCellCollapsed(cell)||cell==this.currentRoot))}}return cell},validateCellState:function(cell,recurse){var view=this;var state=null;if(isNullOrUndefined(cell)){return state}state=view.getState(cell);if(isNullOrUndefined(state)){return state}recurse=!isNullOrUndefined(recurse)?recurse:true;var model=view.graph.getModel();if(state.invalid){state.invalid=false;if(cell!=this.currentRoot){this.validateCellState(model.getParent(cell),false)}state.setVisibleTerminalState(this.validateCellState(this.getVisibleTerminal(cell,true),false),true);state.setVisibleTerminalState(this.validateCellState(this.getVisibleTerminal(cell,false),false),false);this.updateCellState(state);if(cell!=this.currentRoot){this.graph.cellRenderer.redraw(state,false,this.isRendering())}}if(recurse){state.updateCachedBounds();if(state.shape!=null){this.stateValidated(state)}var childCount=model.getChildCount(cell);for(var i=0;i<childCount;i++){this.validateCellState(model.getChildAt(cell,i))}}return state},updateCellState:function(state){},isCellCollapsed:function(cell){return this.graph.isCellCollapsed(cell)},updateVertexState:function(state,geo){},updateEdgeState:function(state,geo){},updateVertexLabelOffset:function(state){},resetValidationState:function(){this.lastNode=null;this.lastHtmlNode=null;this.lastForegroundNode=null;this.lastForegroundHtmlNode=null},stateValidated:function(state){},updateFixedTerminalPoints:function(edge,source,target){},updateFixedTerminalPoint:function(edge,terminal,source,constraint){},updatePoints:function(edge,points,source,target){},transformControlPoint:function(state,pt){},getEdgeStyle:function(edge,points,source,target){},updateFloatingTerminalPoints:function(state,source,target){},updateFloatingTerminalPoint:function(edge,start,end,source){},getTerminalPort:function(state,terminal,source){},getPerimeterPoint:function(terminal,next,orthogonal,border){},getRoutingCenterX:function(state){},getRoutingCenterY:function(state){},getPerimeterBounds:function(terminal,border){},getPerimeterFunction:function(state){},getNextPoint:function(edge,opposite,source){},getVisibleTerminal:function(edge,source){},updateEdgeBounds:function(state){},getPoint:function(state,geometry){},getRelativePoint:function(edgeState,x,y){},updateEdgeLabelOffset:function(state){},getState:function(cell,create){var view=this;var state=null;if(!cell){return state}create=create||false;state=view.states.get(cell);if(create&&(state===null||view.updateStyle)&&view.graph.isCellVisible(cell)){if(state===null){state=view.createState(cell);view.states.put(cell,state)}else{state.style=view.graph.getCellStyle(cell)}}return state},isRendering:function(){return this.rendering},setRendering:function(value){this.rendering=value},isAllowEval:function(){return this.allowEval},setAllowEval:function(value){this.allowEval=value},getStates:function(){return this.states},setStates:function(value){this.states=value},getCellStates:function(cells){if(isNullOrUndefined(cells)){return this.states}else{var result=[];for(var i=0;i<cells.length;i++){var state=this.getState(cells[i]);if(state!=null){result.push(state)}}return result}},removeState:function(cell){var state=null;if(cell!=null){state=this.states.remove(cell);if(state!=null){this.graph.cellRenderer.destroy(state);state.destroy()}}return state},createState:function(cell){var state=new CellState(this,cell,this.graph.getCellStyle(cell));var model=this.graph.getModel();if(state.view.graph.container!=null&&state.cell!=state.view.currentRoot&&(model.isVertex(state.cell)||model.isEdge(state.cell))){this.graph.cellRenderer.createShape(state)}return state},getCanvas:function(){return this.canvas},getBackgroundPane:function(){return this.backgroundPane},getDrawPane:function(){return this.drawPane},getOverlayPane:function(){return this.overlayPane},getDecoratorPane:function(){return this.decoratorPane},isContainerEvent:function(evt){},isScrollEvent:function(evt){},installListeners:function(){return this},createSvg:function(){var view=this;view.canvas=document.createElementNS(constants.NS_SVG,"g");view.backgroundPane=document.createElementNS(constants.NS_SVG,"g");view.canvas.appendChild(view.backgroundPane);view.drawPane=document.createElementNS(constants.NS_SVG,"g");view.canvas.appendChild(view.drawPane);view.overlayPane=document.createElementNS(constants.NS_SVG,"g");view.canvas.appendChild(view.overlayPane);view.decoratorPane=document.createElementNS(constants.NS_SVG,"g");view.canvas.appendChild(view.decoratorPane);var root=document.createElementNS(constants.NS_SVG,"svg");root.style.width="100%";root.style.height="100%";root.style.display="block";root.appendChild(view.canvas);var container=view.graph.container;if(container!==null){container.appendChild(root);view.updateContainerStyle(container)}return this},updateContainerStyle:function(container){},destroy:function(){}})});define("PaneJS/Model",["require","exports","module","PaneJS/common/class","PaneJS/common/utils","PaneJS/events/Event","PaneJS/events/EventObject","PaneJS/changes/RootChange","PaneJS/changes/ChildChange","PaneJS/Cell","PaneJS/UndoableEdit"],function(require,exports,module){var Class=require("PaneJS/common/class");var utils=require("PaneJS/common/utils");var Event=require("PaneJS/events/Event");var EventObject=require("PaneJS/events/EventObject");var RootChange=require("PaneJS/changes/RootChange");var ChildChange=require("PaneJS/changes/ChildChange");var Cell=require("PaneJS/Cell");var UndoableEdit=require("PaneJS/UndoableEdit");var each=utils.each;var isNumeric=utils.isNumeric;var isNullOrUndefined=utils.isNullOrUndefined;module.exports=Class.create({Implements:Event,root:null,cells:null,maintainEdgeParent:true,createIds:true,prefix:"",postfix:"",nextId:0,currentEdit:null,updateLevel:0,endingUpdate:false,constructor:function Model(root){var model=this;this.currentEdit=model.createUndoableEdit();root?model.setRoot(root):model.clear()},clear:function(){var model=this;var root=model.createRoot();model.setRoot(root);return model},createRoot:function(){var cell=new Cell;cell.insert(new Cell);return cell},setRoot:function(root){var model=this;model.execute(new RootChange(model,root));return model},getRoot:function(cell){var model=this;var root=cell||model.root;while(cell){root=cell;cell=model.getParent(cell)}return root},getCell:function(id){var cells=this.cells;return cells?cells[id]:null},filterCells:function(cells,filter){var result=[];if(cells!=null){for(var i=0;i<cells.length;i++){if(filter(cells[i])){result.push(cells[i])}}}return result},getDescendants:function(parent){return this.filterDescendants(null,parent)},filterDescendants:function(filter,parent){var model=this;var result=[];parent=parent||model.getRoot();if(isNullOrUndefined(filter)||filter(parent)){result.push(parent)}var childCount=this.getChildCount(parent);for(var i=0;i<childCount;i++){var child=this.getChildAt(parent,i);result=result.concat(this.filterDescendants(filter,child))}return result},rootChanged:function(root){var model=this;var oldRoot=model.root;model.root=root;model.nextId=0;model.cells=null;model.cellAdded(root);return oldRoot},isRoot:function(cell){return cell&&this.root===cell},isLayer:function(cell){var model=this;var parent=model.getParent(cell);return model.isRoot(parent)},isAncestor:function(parent,child){while(child&&child!==parent){child=this.getParent(child)}return child===parent},isCreateIds:function(){return this.createIds},setCreateIds:function(value){this.createIds=value},contains:function(cell){return this.isAncestor(this.root,cell)},getParent:function(cell){return cell?cell.getParent():null},add:function(parent,child,index){if(parent&&child&&child!==parent){if(isNullOrUndefined(index)){index=this.getChildCount(parent)}var parentChanged=parent!==this.getParent(child);this.execute(new ChildChange(this,parent,child,index));if(this.maintainEdgeParent&&parentChanged){this.updateEdgeParents(child)}}return child},cellAdded:function(cell){if(!cell){return}if(!cell.getId()&&this.createIds){cell.setId(this.createId())}if(cell.getId()){var exists=this.getCell(cell.getId());if(exists!==cell){while(exists){cell.setId(this.createId(cell));exists=this.getCell(cell.getId())}if(!this.cells){this.cells={}}this.cells[cell.getId()]=cell}}if(isNumeric(cell.getId())){this.nextId=Math.max(this.nextId,cell.getId())}var childCount=this.getChildCount(cell);for(var i=0;i<childCount;i++){this.cellAdded(this.getChildAt(cell,i))}},createId:function(){var model=this;var id=model.nextId;model.nextId++;return model.prefix+id+model.postfix},updateEdgeParents:function(cell,root){},updateEdgeParent:function(cell,root){},getOrigin:function(cell){var model=this;var result=null;if(cell){result=model.getOrigin(model.getParent(cell));if(!model.isEdge(cell)){var geo=model.getGeometry(cell);if(geo){result.x+=geo.x;result.y+=geo.y}}}else{result=new Point}return result},getNearestCommonAncestor:function(cell1,cell2){},remove:function(cell){var model=this;if(cell===model.root){model.setRoot(null)}else if(model.getParent(cell)){model.execute(new ChildChange(this,null,cell))}return cell},cellRemoved:function(cell){if(cell&&this.cells){var childCount=this.getChildCount(cell);for(var i=childCount-1;i>=0;i--){this.cellRemoved(this.getChildAt(cell,i))}if(this.cells&&cell.getId()){delete this.cells[cell.getId()]}}},parentForCellChanged:function(cell,parent,index){},getChildCount:function(cell){return cell?cell.getChildCount():0},getChildAt:function(cell,index){return cell?cell.getChildAt(index):null},getChildren:function(cell){return cell?cell.children:null},eachChildren:function(cell,iterator){each(cell?cell.children:[],iterator)},getChildVertices:function(parent){return this.getChildCells(parent,true,false)},getChildEdges:function(parent){return this.getChildCells(parent,false,true)},getChildCells:function(parent,isVertice,isEdge){isVertice=!isNullOrUndefined(isVertice)?isVertice:false;isEdge=!isNullOrUndefined(isEdge)?isEdge:false;var childCount=this.getChildCount(parent);var result=[];for(var i=0;i<childCount;i++){var child=this.getChildAt(parent,i);if(!isEdge&&!isVertice||isEdge&&this.isEdge(child)||isVertice&&this.isVertex(child)){result.push(child)}}return result},getTerminal:function(edge,isSource){return edge?edge.getTerminal(isSource):null},setTerminal:function(edge,terminal,isSource){var terminalChanged=terminal!=this.getTerminal(edge,isSource);this.execute(new TerminalChange(this,edge,terminal,isSource));if(this.maintainEdgeParent&&terminalChanged){this.updateEdgeParent(edge,this.getRoot())}return terminal},setTerminals:function(edge,source,target){this.beginUpdate();try{this.setTerminal(edge,source,true);this.setTerminal(edge,target,false)}finally{this.endUpdate()}},terminalForCellChanged:function(edge,cell,isSource){var previous=this.getTerminal(edge,isSource);if(cell!=null){cell.insertEdge(edge,isSource)}else if(previous!=null){previous.removeEdge(edge,isSource)}return previous},getEdgeCount:function(cell){return cell?cell.getEdgeCount():0},getEdgeAt:function(cell,index){return cell?cell.getEdgeAt(index):null},getDirectedEdgeCount:function(cell,outgoing,ignoredEdge){},getConnections:function(cell){},getIncomingEdges:function(cell){},getOutgoingEdges:function(cell){},getEdges:function(cell,incoming,outgoing,includeLoops){},getEdgesBetween:function(source,target,directed){},getOpposites:function(edges,terminal,sources,targets){},getTopmostCells:function(cells){},isVertex:function(cell){return cell?cell.isVertex():false},isEdge:function(cell){return cell?cell.isEdge():false},isConnectable:function(cell){return cell?cell.isConnectable():false},getValue:function(cell){return cell?cell.getValue():null},setValue:function(cell,value){this.execute(new ValueChange(this,cell,value));return value},valueForCellChanged:function(cell,value){},getGeometry:function(cell){},setGeometry:function(cell,geometry){},geometryForCellChanged:function(cell,geometry){},getStyle:function(cell){},setStyle:function(cell,style){},styleForCellChanged:function(cell,style){},isCollapsed:function(cell){},setCollapsed:function(cell,collapsed){},collapsedStateForCellChanged:function(cell,collapsed){},isVisible:function(cell){return cell?cell.isVisible():false},setVisible:function(cell,visible){},visibleStateForCellChanged:function(cell,visible){},execute:function(change){change.digest();this.beginUpdate();this.currentEdit.add(change);this.emit(new EventObject("execute",{change:change}));this.emit(new EventObject("executed",{change:change}));this.endUpdate()},beginUpdate:function(){this.updateLevel++;this.emit(new EventObject("beginUpdate"));if(this.updateLevel==1){this.emit(new EventObject("startEdit"))}},endUpdate:function(){this.updateLevel--;if(this.updateLevel==0){this.emit(new EventObject("endEdit"))}if(!this.endingUpdate){this.endingUpdate=this.updateLevel==0;this.emit(new EventObject("endUpdate",{edit:this.currentEdit}));try{if(this.endingUpdate&&!this.currentEdit.isEmpty()){this.emit(new EventObject("beforeUndo",{edit:this.currentEdit}));var tmp=this.currentEdit;this.currentEdit=this.createUndoableEdit();tmp.notify();this.emit(new EventObject("undo",{edit:tmp}))}}finally{this.endingUpdate=false}}},createUndoableEdit:function(){var edit=new UndoableEdit(this,true);edit.notify=function(){var model=edit.source;model.emit(new EventObject("change",{edit:edit,changes:edit.changes}));model.emit(new EventObject("notify",{edit:edit,changes:edit.changes}))};return edit},mergeChildren:function(from,to,cloneAllEdges){},mergeChildrenImpl:function(from,to,cloneAllEdges,mapping){},getParents:function(cell){},cloneCell:function(cell){},cloneCells:function(cell,includeChildren){},cloneCellImpl:function(cell,mapping,includeChildren){},cellCloned:function(cell){},restoreClone:function(clone,cell,mapping){},destroy:function(){}})});define("PaneJS/Shape",["require","exports","module","PaneJS/common/class","PaneJS/common/utils","PaneJS/constants","PaneJS/Point","PaneJS/Rectangle","PaneJS/Canvas2D"],function(require,exports,module){var Klass=require("PaneJS/common/class");var utils=require("PaneJS/common/utils");var constants=require("PaneJS/constants");var Point=require("PaneJS/Point");var Rectangle=require("PaneJS/Rectangle");var Canvas2D=require("PaneJS/Canvas2D");var each=utils.each;var Shape=Klass.create({constructor:function Shape(){var shape=this;shape.strokewidth=1;shape.rotation=0;shape.opacity=100;shape.flipH=false;shape.flipV=false},scale:1,antiAlias:true,bounds:null,points:null,node:null,state:null,style:null,boundingBox:null,stencil:null,svgStrokeTolerance:8,pointerEvents:true,svgPointerEvents:"all",shapePointerEvents:false,stencilPointerEvents:false,outline:false,visible:true,init:function(container){var shape=this;if(shape.node||!container){return}var node=shape.create(container);if(node){shape.node=node;container.appendChild(node)}return shape},create:function(container){return container&&container.ownerSVGElement?document.createElementNS(constants.NS_SVG,"g"):null},clear:function(){var shape=this;var node=shape.node;if(node&&node.ownerDocument){while(node.lastChild){node.removeChild(node.lastChild)}}return shape},getScreenOffset:function(){},reconfigure:function(){return this.redraw()},redraw:function(){var shape=this;var node=shape.node;shape.updateBoundsFromPoints();if(shape.visible&&shape.checkBounds()){node.style.visibility="visible";shape.clear().redrawShape().updateBoundingBox()}else{node.style.visibility="hidden";shape.boundingBox=null}return shape},redrawShape:function(){var shape=this;var canvas=shape.createCanvas();if(canvas!==null){canvas.pointerEvents=shape.pointerEvents;shape.paint(canvas).destroyCanvas(canvas)}return shape},paint:function(){var shape=this;return shape},updateBoundsFromPoints:function(){var shape=this;var bounds=null;each(shape.points||[],function(point){if(!point){return}var rect=new Rectangle(point.x,point.y,1,1);if(bounds){bounds.add(rect)}else{bounds=rect}});shape.bounds=bounds;return shape},checkBounds:function(){var bounds=this.bounds;return bounds&&!isNaN(bounds.x)&&!isNaN(bounds.y)&&!isNaN(bounds.width)&&!isNaN(bounds.height)&&bounds.width>0&&bounds.height>0},getLabelBounds:function(rect){return rect},getGradientBounds:function(c,x,y,w,h){return new Rectangle(x,y,w,h)},createBoundingBox:function(){},updateBoundingBox:function(){},augmentBoundingBox:function(){},createCanvas:function(){var shape=this;var node=shape.node;var canvas=new Canvas2D(node,false);canvas.strokeTolerance=shape.pointerEvents?shape.svgStrokeTolerance:0;canvas.pointerEventsValue=shape.svgPointerEvents;canvas.blockImagePointerEvents=false;canvas.antiAlias=shape.antiAlias;var off=this.getSvgScreenOffset();if(off===0){node.removeAttribute("transform")}else{node.setAttribute("transform","translate("+off+","+off+")")}if(shape.outline){canvas.setStrokeWidth(this.strokewidth);canvas.setStrokeColor(this.stroke);if(this.isDashed!==null){canvas.setDashed(this.isDashed)}canvas.setStrokeWidth=function(){};canvas.setStrokeColor=function(){};canvas.setFillColor=function(){};canvas.setGradient=function(){};canvas.setDashed=function(){}}return canvas},configureCanvas:function(){},destroyCanvas:function(){},setCursor:function(cursor){var shape=this;var node=shape.node;cursor=cursor||"";shape.cursor=cursor;if(node){node.style.cursor=cursor}return shape},getCursor:function(){return this.cursor},getRotation:function(){var rotation=this.rotation;return utils.isNullOrUndefined(rotation)?0:rotation},getTextRotation:function(){var shape=this;var rot=shape.getRotation();return rot},getShapeRotation:function(){var shape=this;var rot=shape.getRotation();return rot},destroy:function(){}});module.exports=Shape});define("PaneJS/Graph",["require","exports","module","PaneJS/common/class","PaneJS/common/utils","PaneJS/events/Event","PaneJS/events/EventObject","PaneJS/constants","PaneJS/View","PaneJS/Model","PaneJS/Cell","PaneJS/Geometry","PaneJS/Point","PaneJS/CellRenderer","PaneJS/changes/RootChange","PaneJS/changes/ChildChange"],function(require,exports,module){var Class=require("PaneJS/common/class");var utils=require("PaneJS/common/utils");var Event=require("PaneJS/events/Event");var EventObject=require("PaneJS/events/EventObject");var constants=require("PaneJS/constants");var View=require("PaneJS/View");var Model=require("PaneJS/Model");var Cell=require("PaneJS/Cell");var Geometry=require("PaneJS/Geometry");var Point=require("PaneJS/Point");var CellRenderer=require("PaneJS/CellRenderer");var RootChange=require("PaneJS/changes/RootChange");var ChildChange=require("PaneJS/changes/ChildChange");var isNullOrUndefined=utils.isNullOrUndefined;module.exports=Class.create({Implements:Event,EMPTY_ARRAY:[],mouseListeners:null,isMouseDown:false,model:null,view:null,stylesheet:null,selectionModel:null,cellEditor:null,cellRenderer:null,multiplicities:null,gridSize:10,gridEnabled:true,portsEnabled:true,nativeDblClickEnabled:true,doubleTapEnabled:true,doubleTapTimeout:500,doubleTapTolerance:25,lastTouchX:0,lastTouchY:0,lastTouchTime:0,tapAndHoldEnabled:true,tapAndHoldDelay:500,tapAndHoldInProgress:false,tapAndHoldValid:false,initialTouchX:0,initialTouchY:0,tolerance:0,defaultOverlap:.5,defaultParent:null,alternateEdgeStyle:null,backgroundImage:null,pageVisible:false,pageBreaksVisible:false,pageBreakColor:"gray",pageBreakDashed:true,minPageBreakDist:20,preferPageSize:false,pageFormat:null,pageScale:1.5,enabled:true,escapeEnabled:true,invokesStopCellEditing:true,enterStopsCellEditing:false,useScrollbarsForPanning:true,exportEnabled:true,importEnabled:true,cellsLocked:false,cellsCloneable:true,foldingEnabled:true,cellsEditable:true,cellsDeletable:true,cellsMovable:true,edgeLabelsMovable:true,vertexLabelsMovable:false,dropEnabled:false,splitEnabled:true,cellsResizable:true,cellsBendable:true,cellsSelectable:true,cellsDisconnectable:true,autoSizeCells:false,autoSizeCellsOnAdd:false,autoScroll:true,timerAutoScroll:false,allowAutoPanning:false,ignoreScrollbars:false,autoExtend:true,maximumGraphBounds:null,minimumGraphSize:null,minimumContainerSize:null,maximumContainerSize:null,resizeContainer:false,border:0,keepEdgesInForeground:false,keepEdgesInBackground:false,allowNegativeCoordinates:true,constrainChildren:true,constrainChildrenOnResize:false,extendParents:true,extendParentsOnAdd:true,extendParentsOnMove:false,recursiveResize:false,collapseToPreferredSize:true,zoomFactor:1.2,keepSelectionVisibleOnZoom:false,centerZoom:true,resetViewOnRootChange:true,resetEdgesOnResize:false,resetEdgesOnMove:false,resetEdgesOnConnect:true,allowLoops:false,multigraph:true,connectableEdges:false,allowDanglingEdges:true,cloneInvalidEdges:false,disconnectOnMove:true,labelsVisible:true,htmlLabels:false,swimlaneSelectionEnabled:true,swimlaneNesting:true,swimlaneIndicatorColorAttribute:constants.STYLE_FILLCOLOR,imageBundles:null,minFitScale:.1,maxFitScale:8,panDx:0,panDy:0,collapsedImage:null,expandedImage:null,warningImage:null,alreadyConnectedResource:null,containsValidationErrorsResource:null,collapseExpandResource:null,constructor:function Graph(container,model,stylesheet){var graph=this;graph.mouseListeners=null;graph.model=model?model:new Model;graph.multiplicities=[];graph.imageBundles=[];graph.cellRenderer=graph.createCellRenderer();graph.setSelectionModel(graph.createSelectionModel());graph.setStylesheet(stylesheet?stylesheet:graph.createStylesheet());graph.view=graph.createView();graph.model.on("change",function(evt){graph.graphModelChanged(evt.getData("edit").changes)});if(container){graph.init(container)}graph.view.revalidate()},init:function(container){var graph=this;graph.container=container;this.cellEditor=this.createCellEditor();graph.view.init();graph.sizeDidChange()},createHandlers:function(){},createSelectionModel:function(){},createStylesheet:function(){},createView:function(){return new View(this)},createCellRenderer:function(){return new CellRenderer},createCellEditor:function(){},getModel:function(){return this.model},getView:function(){return this.view},getStylesheet:function(){return this.stylesheet},setStylesheet:function(stylesheet){this.stylesheet=stylesheet},getSelectionModel:function(){return this.selectionModel},setSelectionModel:function(selectionModel){this.selectionModel=selectionModel},getSelectionCellsForChanges:function(){},graphModelChanged:function(changes){console.log(changes);for(var i=0;i<changes.length;i++){this.processChange(changes[i])}this.removeSelectionCells(this.getRemovedCellsForChanges(changes));this.view.validate();this.sizeDidChange()},processChange:function(change){if(change instanceof RootChange){}else if(change instanceof ChildChange){var newParent=this.model.getParent(change.child);this.view.invalidate(change.child,true,true);if(!newParent||this.isCellCollapsed(newParent)){this.view.invalidate(change.child,true,true);this.removeStateForCell(change.child);if(this.view.currentRoot===change.child){this.home()}}if(newParent!==change.previous){if(newParent){this.view.invalidate(newParent,false,false)}if(change.previous!=null){this.view.invalidate(change.previous,false,false)}}}},getRemovedCellsForChanges:function(){},removeStateForCell:function(cell){var childCount=this.model.getChildCount(cell);for(var i=0;i<childCount;i++){this.removeStateForCell(this.model.getChildAt(cell,i))}this.view.invalidate(cell,false,true);this.view.removeState(cell)},addCellOverlay:function(cell,overlay){},getCellOverlays:function(cell){return cell.overlays},removeCellOverlay:function(cell,overlay){},removeCellOverlays:function(cell){},clearCellOverlays:function(cell){},setCellWarning:function(){},startEditing:function(evt){},startEditingAtCell:function(cell,evt){},getEditingValue:function(cell,evt){},stopEditing:function(cancel){},labelChanged:function(cell,value,evt){},cellLabelChanged:function(cell,value,autoSize){},escape:function(evt){},click:function(me){},dblClick:function(evt,cell){},tapAndHold:function(me){},scrollPointToVisible:function(x,y,extend,border){},createPanningManager:function(){},getBorderSizes:function(){},getPreferredPageSize:function(bounds,width,height){},sizeDidChange:function(){},doResizeContainer:function(width,height){},updatePageBreaks:function(visible,width,height){},getCellStyle:function(cell){},postProcessCellStyle:function(style){},setCellStyle:function(style,cells){},setCellStyles:function(key,value,cells){},toggleCellStyle:function(key,defaultValue,cell){},toggleCellStyles:function(key,defaultValue,cells){},
toggleCellStyleFlags:function(key,flag,cells){},setCellStyleFlags:function(key,flag,value,cells){},alignCells:function(align,cells,param){},flipEdge:function(edge){},addImageBundle:function(bundle){},removeImageBundle:function(bundle){},getImageFromBundles:function(key){},orderCells:function(back,cells){},cellsOrdered:function(cells,back){},groupCells:function(group,border,cells){},getCellsForGroup:function(cells){},getBoundsForGroup:function(group,children,border){},createGroupCell:function(cells){},ungroupCells:function(cells){},removeCellsFromParent:function(cells){},updateGroupBounds:function(cells,border,moveGroup,topBorder,rightBorder,bottomBorder,leftBorder){},cloneCells:function(cells,allowInvalidEdges){},insertVertex:function(parent,id,value,x,y,width,height,style,relative){var graph=this;var vertex=graph.createVertex(parent,id,value,x,y,width,height,style,relative);return graph.addCell(vertex,parent)},createVertex:function(parent,id,value,x,y,width,height,style,relative){var geometry=new Geometry(x,y,width,height);geometry.relative=!isNullOrUndefined(relative)?relative:false;var vertex=new Cell(value,geometry,style);vertex.setId(id);vertex.setVertex(true);vertex.setConnectable(true);return vertex},insertEdge:function(parent,id,value,source,target,style){},createEdge:function(parent,id,value,source,target,style){var geometry=new Geometry;geometry.relative=true;var edge=new Cell(value,geometry,style);edge.setId(id);edge.setEdge(true);return edge},addEdge:function(edge,parent,source,target,index){},addCell:function(cell,parent,index,source,target){return this.addCells([cell],parent,index,source,target)[0]},addCells:function(cells,parent,index,source,target){parent=parent||this.getDefaultParent();index=!isNullOrUndefined(index)?index:this.model.getChildCount(parent);this.model.beginUpdate();try{this.cellsAdded(cells,parent,index,source,target,false,true);this.emit(new EventObject("addCells",{cells:cells,parent:parent,index:index,source:source,target:target}))}finally{this.model.endUpdate()}return cells},cellsAdded:function(cells,parent,index,source,target,absolute,constrain){if(cells&&parent&&!isNullOrUndefined(index)){this.model.beginUpdate();try{var parentState=absolute?this.view.getState(parent):null;var o1=parentState?parentState.origin:null;var zero=new Point(0,0);for(var i=0;i<cells.length;i++){if(!cells[i]){index--}else{var previous=this.model.getParent(cells[i]);if(o1&&cells[i]!==parent&&parent!==previous){var oldState=this.view.getState(previous);var o2=oldState?oldState.origin:zero;var geo=this.model.getGeometry(cells[i]);if(geo){var dx=o2.x-o1.x;var dy=o2.y-o1.y;geo=geo.clone();geo.translate(dx,dy);if(!geo.relative&&this.model.isVertex(cells[i])&&!this.isAllowNegativeCoordinates()){geo.x=Math.max(0,geo.x);geo.y=Math.max(0,geo.y)}this.model.setGeometry(cells[i],geo)}}if(parent===previous&&index+i>this.model.getChildCount(parent)){index--}this.model.add(parent,cells[i],index+i);if(this.autoSizeCellsOnAdd){this.autoSizeCell(cells[i],true)}if(this.isExtendParentsOnAdd()&&this.isExtendParent(cells[i])){this.extendParent(cells[i])}if(constrain==null||constrain){this.constrainChild(cells[i])}if(source!=null){this.cellConnected(cells[i],source,true)}if(target!=null){this.cellConnected(cells[i],target,false)}}}this.emit(new EventObject("cellsAdded",{cells:cells,parent:parent,index:index,source:source,target:target,absolute:absolute}))}finally{this.model.endUpdate()}}},autoSizeCell:function(cell,recurse){},removeCells:function(cells,includeEdges){},cellsRemoved:function(cells){},splitEdge:function(edge,cells,newEdge,dx,dy){},toggleCells:function(show,cells,includeEdges){},cellsToggled:function(cells,show){},foldCells:function(){},cellsFolded:function(){},swapBounds:function(){},updateAlternateBounds:function(){},addAllEdges:function(){},getAllEdges:function(){},updateCellSize:function(){},cellSizeUpdated:function(){},getPreferredSizeForCell:function(){},resizeCell:function(){},resizeCells:function(){},cellsResized:function(){},cellResized:function(){},resizeChildCells:function(){},constrainChildCells:function(){},scaleCell:function(){},extendParent:function(){},importCells:function(){},moveCells:function(){},cellsMoved:function(){},translateCell:function(){},getCellContainmentArea:function(){},getMaximumGraphBounds:function(){},constrainChild:function(){},resetEdges:function(){},resetEdge:function(){},getOutlineConstraint:function(){},getAllConnectionConstraints:function(){},getConnectionConstraint:function(){},setConnectionConstraint:function(){},getConnectionPoint:function(){},connectCell:function(){},cellConnected:function(){},disconnectGraph:function(){},getCurrentRoot:function(){return this.view.currentRoot},getTranslateForRoot:function(){},isPort:function(){},getTerminalForPort:function(){},getChildOffsetForCell:function(){},enterGroup:function(){},exitGroup:function(){},home:function(){},isValidRoot:function(){},getGraphBounds:function(){},getCellBounds:function(){},getBoundingBoxFromGeometry:function(){},refresh:function(){},snap:function(){},panGraph:function(){},zoomIn:function(){},zoomOut:function(){},zoomActual:function(){},zoomTo:function(){},center:function(){},zoom:function(){},zoomToRect:function(){},fit:function(){},scrollCellToVisible:function(){},scrollRectToVisible:function(){},getCellGeometry:function(){},isCellVisible:function(cell){return this.model.isVisible(cell)},isCellCollapsed:function(){},isCellConnectable:function(){},isOrthogonal:function(){},isLoop:function(){},isCloneEvent:function(){},isToggleEvent:function(){},isGridEnabledEvent:function(){},isConstrainedEvent:function(){},validationAlert:function(){},isEdgeValid:function(){},getEdgeValidationError:function(){},validateEdge:function(){},validateGraph:function(){},getCellValidationError:function(){},validateCell:function(){},getBackgroundImage:function(){},setBackgroundImage:function(){},getFoldingImage:function(){},convertValueToString:function(){},getLabel:function(){},isHtmlLabel:function(){},isHtmlLabels:function(){},setHtmlLabels:function(){},isWrapping:function(){},isLabelClipped:function(){},getTooltip:function(){},getTooltipForCell:function(){},getCursorForMouseEvent:function(){},getCursorForCell:function(){},getStartSize:function(){},getImage:function(){},getVerticalAlign:function(){},getIndicatorColor:function(){},getIndicatorGradientColor:function(){},getIndicatorShape:function(){},getIndicatorImage:function(){},getBorder:function(){},setBorder:function(){},isSwimlane:function(){},isResizeContainer:function(){},setResizeContainer:function(){},isEnabled:function(){},setEnabled:function(){},isEscapeEnabled:function(){},setEscapeEnabled:function(){},isInvokesStopCellEditing:function(){},setInvokesStopCellEditing:function(){},isEnterStopsCellEditing:function(){},setEnterStopsCellEditing:function(){},isCellLocked:function(){},isCellsLocked:function(){},setCellsLocked:function(){},getCloneableCells:function(){},isCellCloneable:function(){},isCellsCloneable:function(){},setCellsCloneable:function(){},getExportableCells:function(){},canExportCell:function(){},getImportableCells:function(){},canImportCell:function(){},isCellSelectable:function(){},isCellsSelectable:function(){},setCellsSelectable:function(){},getDeletableCells:function(){},isCellDeletable:function(){},isCellsDeletable:function(){},setCellsDeletable:function(){},isLabelMovable:function(){},isCellRotatable:function(){},getMovableCells:function(){},isCellMovable:function(){},isCellsMovable:function(){},setCellsMovable:function(){},isGridEnabled:function(){},setGridEnabled:function(){},isPortsEnabled:function(){},setPortsEnabled:function(){},getGridSize:function(){},setGridSize:function(){},getTolerance:function(){},setTolerance:function(){},isVertexLabelsMovable:function(){},setVertexLabelsMovable:function(){},isEdgeLabelsMovable:function(){},setEdgeLabelsMovable:function(){},isSwimlaneNesting:function(){},setSwimlaneNesting:function(){},isSwimlaneSelectionEnabled:function(){},setSwimlaneSelectionEnabled:function(){},isMultigraph:function(){},setMultigraph:function(){},isAllowLoops:function(){},setAllowDanglingEdges:function(){},isAllowDanglingEdges:function(){},setConnectableEdges:function(){},isConnectableEdges:function(){},setCloneInvalidEdges:function(){},isCloneInvalidEdges:function(){},setAllowLoops:function(){},isDisconnectOnMove:function(){},setDisconnectOnMove:function(){},isDropEnabled:function(){},setDropEnabled:function(){},isSplitEnabled:function(){},setSplitEnabled:function(){},isCellResizable:function(){},isCellsResizable:function(){},setCellsResizable:function(){},isTerminalPointMovable:function(){},isCellBendable:function(){},isCellsBendable:function(){},setCellsBendable:function(){},isCellEditable:function(){},isCellsEditable:function(){},setCellsEditable:function(){},isCellDisconnectable:function(){},isCellsDisconnectable:function(){},setCellsDisconnectable:function(){},isValidSource:function(){},isValidTarget:function(){},isValidConnection:function(){},setConnectable:function(){},isConnectable:function(){},setTooltips:function(){},setPanning:function(){},isEditing:function(){},isAutoSizeCell:function(){},isAutoSizeCells:function(){},setAutoSizeCells:function(){},isExtendParent:function(){},isExtendParents:function(){},setExtendParents:function(){},isExtendParentsOnAdd:function(){},setExtendParentsOnAdd:function(){},isExtendParentsOnMove:function(){},setExtendParentsOnMove:function(){},isRecursiveResize:function(){},setRecursiveResize:function(){},isConstrainChild:function(){},isConstrainChildren:function(){},setConstrainChildren:function(){},setConstrainChildrenOnResize:function(){},isConstrainChildrenOnResize:function(){},isAllowNegativeCoordinates:function(){},setAllowNegativeCoordinates:function(){},getOverlap:function(){},isAllowOverlapParent:function(){},getFoldableCells:function(){},isCellFoldable:function(){},isValidDropTarget:function(){},isSplitTarget:function(){},getDropTarget:function(){},getDefaultParent:function(){var parent=this.getCurrentRoot()||this.defaultParent;if(!parent){var root=this.model.getRoot();parent=this.model.getChildAt(root,0)}return parent},setDefaultParent:function(){},getSwimlane:function(){},getSwimlaneAt:function(){},getCellAt:function(){},intersects:function(){},hitsSwimlaneContent:function(){},getChildVertices:function(){},getChildEdges:function(){},getChildCells:function(){},getConnections:function(){},getIncomingEdges:function(){},getOutgoingEdges:function(){},getEdges:function(){},isValidAncestor:function(){},getOpposites:function(){},getEdgesBetween:function(){},getPointForEvent:function(){},getCells:function(){},getCellsBeyond:function(){},findTreeRoots:function(){},traverse:function(){},isCellSelected:function(){},isSelectionEmpty:function(){},clearSelection:function(){},getSelectionCount:function(){},getSelectionCell:function(){},getSelectionCells:function(){},setSelectionCell:function(){},setSelectionCells:function(){},addSelectionCell:function(){},addSelectionCells:function(){},removeSelectionCell:function(){},removeSelectionCells:function(){},selectRegion:function(){},selectNextCell:function(){},selectPreviousCell:function(){},selectParentCell:function(){},selectChildCell:function(){},selectCell:function(){},selectAll:function(){},selectVertices:function(){},selectEdges:function(){},selectCells:function(){},selectCellForEvent:function(){},selectCellsForEvent:function(){},createHandler:function(){},createVertexHandler:function(){},createEdgeHandler:function(){},createEdgeSegmentHandler:function(){},createElbowEdgeHandler:function(){},addMouseListener:function(){},removeMouseListener:function(){},updateMouseEvent:function(){},getStateForTouchEvent:function(){},isEventIgnored:function(){},isSyntheticEventIgnored:function(){},isEventSourceIgnored:function(){},fireMouseEvent:function(){},consumeMouseEvent:function(){},fireGestureEvent:function(){},destroy:function(){}})});define("PaneJS/index",["require","exports","module","PaneJS/Canvas2D","PaneJS/Cell","PaneJS/CellRenderer","PaneJS/CellState","PaneJS/events/EventObject","PaneJS/Geometry","PaneJS/Graph","PaneJS/Model","PaneJS/Point","PaneJS/Rectangle","PaneJS/Shape","PaneJS/View","PaneJS/constants"],function(require,exports,module){window.zGraph=module.exports={Canvas2D:require("PaneJS/Canvas2D"),Cell:require("PaneJS/Cell"),CellRenderer:require("PaneJS/CellRenderer"),CellState:require("PaneJS/CellState"),EventObject:require("PaneJS/events/EventObject"),Geometry:require("PaneJS/Geometry"),Graph:require("PaneJS/Graph"),Model:require("PaneJS/Model"),Point:require("PaneJS/Point"),Rectangle:require("PaneJS/Rectangle"),Shape:require("PaneJS/Shape"),View:require("PaneJS/View"),constants:require("PaneJS/constants")}});